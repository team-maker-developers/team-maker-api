swagger: "2.0"
info:
  description: "これはTEAM-MAKERに関するAPIです。"
  version: "0.0.1"
  title: "TEAM-MAKER API"
  termsOfService: "http://teammaker.com" # 仮定義
  contact:
    email: "system@teammaker.info"
paths: # TODO: 後で定義する
definitions:
  Corporation:
    description: "求人企業情報"
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "求人企業名"
        example: "感動画株式会社"
      other:
        type: "string"      
        description: "json形式で会社情報を格納する"
  Administrator:
    description: "ある求人企業の管理ユーザー情報"
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        example: "管理ユーザー"
      email:
        type: "string"
        example: "system@teammaker.info"
      password:
        type: "string"
        example: "password"
      passwordConfirm:
        type: "string"
        example: "password"
      # corporation: 必要か迷ったが削除。GETをGraphQLで行う前提だと不要と考えた。
        # $ref: '#/definitions/Corporation'
  Employee:
    type: "object"
    description: "ある求人企業の社員情報" 
    properties:
      id:
        type: "string"
        description: "ID情報。管理者が任意の文字に指定する。会社用のメアドを持たない社員が多いと想定しemailは使わない。" 
      name:
        type: "string"
        example: "齊藤 大介"
      password:
        type: "string"
        example: "password"
      passwordConfirm:
        type: "string"
        example: "password"
      tag:
        description: "コンサルタントが指定するタグ"
        type: "string"
      department:
        description: "部署"
        type: "string"
        example: "営業"
      point:
        description: "紹介した求人が内定すると貯まるポイント"
        type: "integer"
      # corporation: 必要か迷ったが削除。GETをGraphQLで行う前提だと不要と考えた。
        # $ref: '#/definitions/Corporation'
  JobOffer:
    type: "object"
    description: "求人情報"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      other:
        description: "求人情報（仕事内容、給与など）をjsonで格納する"
        type: "string"      
      # corporation: 必要か迷ったが削除。GETをGraphQLで行う前提だと不要と考えた。
        # $ref: '#/definitions/Corporation'
  JobApplication:
    type: "object"
    description: "社員から紹介された求人応募情報"
    properties:
      id:
        type: "integer"
      info:
        description: "応募情報。LINEのスキーマが不明のため、noSql or json型で対応する。求職者の名前などもここに入っている想定"
        type: string
      # introducerEmployee: 必要か迷ったが削除。GETをGraphQLで行う前提だと不要と考えた。
        # description: "紹介した社員"
        # $ref: '#/definitions/Employee'
      status: 
        description: "#応募/面談/内定/削除 などのステータス"
        type: "integer"